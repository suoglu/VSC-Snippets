{
	"always posedge": {
		"prefix": "alwaysposedge",
		"body": [
		   "always@(posedge clk)\n\tbegin\n\t\t$0\n\tend"
	   ],
	   "description": "Always statement with posedge clock"
   },

   "always negedge": {
		"prefix": "alwaysnegedge",
		"body": [
		   "always@(negedge clk)\n\tbegin\n\t\t$0\n\tend"
	   ],
	   "description": "Always statement with negedge clock"
   },


	"always comb": {
		"prefix": "alwayscomb",
		"body": [
		   "always@*\n\tbegin\n\t\t$0\n\tend"
	   ],
	   "description": "Combinational always statement"
   },

   "always reset": {
		"prefix": "alwaysrst",
		"body": [
		"always@(posedge clk or posedge rst)\n\tbegin\n\t\tif(rst)\n\t\t\tbegin\n\t\t\t\t${1:reset_code}\n\t\t\tend\n\t\telse\n\t\t\tbegin\n\t\t\t\t$0\n\t\t\tend\n\tend"
	],
	"description": "Always statement with clock and reset"
  },
  
  "always delay": {
   "prefix": "always#",
   "body": [
    "always #${1:delay} $0"
  ],
  "description": "always with delay"
},
  
  "initial": {
  "prefix": "initial",
  "body": [
    "initial\n\tbegin\n\t\t$0\n\tend"
  ],
  "description": "initial statement"
  },

	"assign": {
		 	"prefix": "assign",
		 	"body": [
				"assign ${1:target} = ${2:source};$0"
			],
			"description": "Single line combinational assignment"
		},

	"case": {
		 	"prefix": "case",
		 	"body": [
				"case(${1:condition})\n\t${2:example_case}:\n\t\tbegin\n\t\t\t${3:example_code};\n\t\tend\n\tdefault:\n\t\tbegin\n\t\t\t${4:default_code};\n\t\tend\nendcase$0"
			],
			"description": "case statement"
		},

	"casex": {
		 	"prefix": "casex",
		 	"body": [
				"casex(${1:condition})\n\t${2:example_case}:\n\t\tbegin\n\t\t\t${3:example_code};\n\t\tend\n\tdefault:\n\t\tbegin\n\t\t\t${4:default_code};\n\t\tend\nendcase$0"
			],
			"description": "casex statement (?: for dont cares)"
		},

	"casez": {
		 	"prefix": "casez",
		 	"body": [
				"casex(${1:condition})\n\t${2:example_case}:\n\t\tbegin\n\t\t\t${3:example_code}:\n\t\tend\n\tdefault:\n\t\tbegin\n\t\t\t${4:default_code}:\n\t\tend\nendcase$0"
			],
			"description": "casez statement"
		},
	"dump file": {
			"prefix": "dumpfile",
			"body": [
			   "\\$dumpfile(\"${1:FILE_NAME}.vcd\");$0"
		   ],
		   "description": "generate output file"
	   },
	"dump variable": {
			"prefix": "dumpvar",
			"body": [
			   "\\$dumpvars(${1:number}, ${2:NAME});$0"
		   ],
		   "description": "to output variable"
	   },
	"finish sim": {
		"prefix": "finish",
		"body": [
		   "\\$finish;$0"
	   ],
	   "description": "finish simulation"
   },
	"single line condition statement": {
		 	"prefix": "conditional",
		 	"body": [
				"${1:target} = (${2:condition}) ? ${3:true_source} : ${4:false_source};$0"
			],
			"description": "single line condition statement"
		},

	"new module": {
		 	"prefix": "module",
		 	"body": [
				"module ${1:module_name}(\n\t$0);\n\t\nendmodule"
			],
			"description": "new module"
		},

	"if": {
		 	"prefix": "if",
		 	"body": [
				"if(${1:condition})\n\tbegin\n\t\t$0\n\tend"
			],
			"description": "if statement"
		},

	"if-else": {
		 	"prefix": "ifelse",
		 	"body": [
				"if(${1:condition})\n\tbegin\n\t\t${2:true}\n\tend\nelse\n\tbegin\n\t\t${3:false}\n\tend$0"
			],
			"description": "if-else statement"
    },

    "timescale": {
      "prefix": "timescale",
      "body": [
       "`timescale ${1:1ns / 1ps}$0"
     ],
     "description": "time scale for sim"
   },

    "include": {
      "prefix": "include",
      "body": [
        "`include \"$0.v\""
      ],
      "description": "include verilog files"
    }		
}
